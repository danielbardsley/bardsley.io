name: 'bardsley.io workflow'

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: 'Build Application'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  terraform:
    name: 'Apply Terraform'
    runs-on: ubuntu-latest
    environment: production
    needs: build

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform -chdir=terraform init

    - name: Terraform Plan
      run: terraform -chdir=terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform -chdir=terraform apply -auto-approve -input=false

  deploy:
    name: 'Deploy Website'
    runs-on: ubuntu-latest
    environment: production
    needs: [build, terraform]
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: bardsley-io
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'build'

  invalidate:
    name: 'Invalidate CloudFront'
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy]
    steps:
      - name: 'Clear Cache'
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
          PATHS: '/*'
          AWS_REGION: 'us-east-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
